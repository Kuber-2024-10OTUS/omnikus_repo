apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-frontend
  namespace: monitoring
rules:
- apiGroups: ["",]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-frontend
  namespace: monitoring
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-frontend
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-frontend
subjects:
- kind: ServiceAccount
  name: prometheus-frontend
  namespace: monitoring

---

apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: main
  namespace: monitoring
  labels:
    prometheus: main
spec:
  resources:
    requests:
      memory: 800Mi
  serviceAccountName: prometheus-frontend
  serviceMonitorSelector:
    matchLabels:
      app: nginx-stub
---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-main
  namespace: monitoring
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    prometheus: main
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homework-ingress-stub
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: '/$2'
spec:
  ingressClassName: nginx
  rules:
  - host: "homework.stub"
    http:
      paths:
      - path: /prometheus(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: prometheus-main
            port:
              number: 9090
      - path: /grafana(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: prometheus-grafana
            port:
              number: 3000
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: prometheus-server-conf
#   namespace: monitoring
# data:
#   prometheus.yml: |
#     global:
#       scrape_interval: 15s
#       evaluation_interval: 15s
#     metrics_path: /nginx_status
#     scrape_configs:
#       - job_name: 'prometheus'
#         static_configs:
#           - targets: ['localhost:9090']
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: prometheus-server
#   namespace: monitoring
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: prometheus-server
#   template:
#     metadata:
#       labels:
#         app: prometheus-server
#     spec:
#       containers:
#         - name: prometheus
#           image: prom/prometheus
#           ports:
#             - containerPort: 9090
#           volumeMounts:
#             - name: config-volume
#               mountPath: /etc/prometheus
#       volumes:
#         - name: config-volume
#           configMap:
#             name: prometheus-server-conf
#             defaultMode: 420
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: prometheus-service
#   namespace: monitoring
# spec:
#   selector:
#     app: prometheus-server
#   externalIPs: 
#     - 172.16.11.211
#   externalTrafficPolicy: Cluster
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 9090
#   type: LoadBalancer

