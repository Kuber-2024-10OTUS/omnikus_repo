apiVersion: apps/v1
kind: Deployment
metadata:
  name: homework-deployment
  namespace: homework
  labels:
    app: homework-pod

spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 35%
  replicas: 3
  selector:
    matchLabels:
      app: homework
  template:
    metadata:
      labels:
        app: homework
    spec:
    #   affinity:
    #     nodeAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #         nodeSelectorTerms:
    #         - matchExpressions:
    #           - key: homework
    #             operator: Exists
  
      containers:
      - name: webserver
        image: nginx
        command: ["/bin/sh","-c"]
        args: ["sed -i 's/listen  .*/listen 8000;/g' /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 8000
            name: nginx-web-view
        volumeMounts:
        - name: homework-volume
          mountPath: /homework
        - name: homework-cm
          mountPath: /homework/conf/
        lifecycle:
          preStop:
            exec:
              command: ['bash', '-c', 'rm /homework/index.html']
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5


      initContainers:
      - name: init-container
        image: busybox
        command:
        - wget
        - "-O"
        - "/init/index.html"
        - http://info.cern.ch
        volumeMounts:
        - name: homework-volume
          mountPath: /init

      
      volumes: 
      - name: homework-volume
        persistentVolumeClaim:
          claimName: homework-pvc
      - name: homework-cm
        configMap:
          name: homework-cm